1. Internal working of hashmap, collisions, equals whether it is on key or value
2. Concurrent hashmap, default segment size
3. Mutable objects, why we need to make class as final. What is the proble if we override. How to handle immutable fields *******
4. Countdown latch
5. Spring IOC, what are the benefits, what will happen we declare it as prototype bean, different instance is fine, but how spring internally handles ****
6. Connect by clause in oracle or sql *****
7. Liskow subtitution principle in SOLID with example  ******
8. In a list where same elements are adjacent but not sorted, how to find the max ocurrance of the element with count



2nd Round
**************************************

1. Project architecture
2. Input file, what happens if host is down when MaRRS inputs this data , ans is write to multiple host at same time
3. Database paritioning, different types like range paritioning and interval partitioning
4. How big is the data, weekly as well as daily, is it beacuse of data we need to move to HDFS 
   weekly 1 G, Thursday 5 G only from MRI
   

F2F   
**************************************

1. clubbing queue and rest services, synchronous and asynchronous
2. garbage collection, which gc or which gc collector is stop the world
3. spring xa transaction and two phase commit, in detail, one thread or multiple thread?
4. for realtime applications or applications which is highly concurrent, how do u decide which old gen or young gen we should keep maximum
   and which gc will use
5. how to see if memory leak is there after gc
6. which tool to analyze gc and memory heap (jmap or something)   
7. persistance in queue to save the message header so that it can retrieved in case of n/w issues
8. how to connect to different databases in spring without modiying dao code, how to do in xml
9. proxy pattern usage , in transaction and in aop
10. hibernate and use of ORM
